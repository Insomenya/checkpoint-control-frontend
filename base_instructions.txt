Основные инструкции для разработки данного приложения:

1. При разработке новых экранов и компонентов можешь использовать уже разработанные мной компоненты, утилитарные функции и константы, расположенные в папке src/shared. Обрати внимание, что разработанные мной компоненты форм, расположенные в src/shared/common/atoms/form должны находиться внутри FormProvider (из react-hook-form). При использовании компонента AppTable (кастомная таблица с пагинацией, сортировкой, экспортом в пдф и эксель, кнопками действий (удаление, добавление, редактирование для строк)) проверь как он используется в других местах, чтобы у тебя было общее представление о его работе.
2. Можешь также использовать базовые компоненты v-uik (библиотека переиспользуемых компонентов). Так как v-uik - это не популярная библиотека и ты можешь не знать о компонентах, которые в нее входят, я вынес документацию по ней в файлы внутри папки v-uik-docs.
3. Придерживайся такого же подхода к разработке, структуре папок и именования, как в остальных местах в проекте, старайся не менять старый код без большой необходимости.
4. Модели данных находятся в src/models. Страницы находятся в src/pages. Компоненты страниц могут находиться в src/features/<feature_name>/components. Схемы валидации в Компоненты страниц могут находиться в src/features/<feature_name>/schemas. Rtkq api находится в src/api.
5. За общей информацией о проекте можешь смотреть в файл README.md.
6. Спецификация api находится в файле api_specification.md.
7. Не надо писать весь код в файле страницы (pages) нужно разбивать код на логичные части и рассовывать его по компонентам внутри features.
8. Пожалуйста не оставляй в коде комментарии.
9. Пожалуйста не используй интерфейсы typescript, используй вместо них типы.
10. Оставляй в конце файлов одну пустую строку после всего кода.
11. Руты api находятся в файле apiPaths.ts (руты методов api), руты роутера приложения находятся в routerPaths.ts (руты страниц и экранов).